---
- hosts: webserver
  tasks:
    - name: "Install nginx"
      apt:
        name: nginx
        state: present

    - name: Test current nginx config
      shell: "nginx -t"
      changed_when: false

    - name: Set the nginx site config file for webserver
      template:
        src: "nginx-conf/nginx_webserver.conf.j2"
        dest: "{{ nginx.config_dir }}/sites-available/webserver.{{ tld }}.conf"
      notify:
        - reload nginx

    - name: Set the sites-enabled symlink for webserver
      file:
        src: "{{ nginx.config_dir }}/sites-available/webserver.{{ tld }}.conf"
        dest: "{{ nginx.config_dir }}/sites-enabled/webserver.{{ tld }}.conf"
        state: link
      notify:
        - reload nginx

    - name: Set up non-ssl virtual host config for {{ property }} site
      template:
        src: "nginx-conf/nginx_site_nonssl.conf.j2"
        dest: "{{ nginx.config_dir }}/sites-available/{{ property }}.{{ tld }}_nonssl.conf"
      notify:
        - reload nginx

    - name: Set up non-ssl symlink for {{ property }} site
      file:
        src: "{{ nginx.config_dir }}/sites-available/{{ property }}.{{ tld }}_nonssl.conf"
        dest: "{{ nginx.config_dir }}/sites-enabled/{{ property }}.{{ tld }}_nonssl.conf"
        state: link
      notify:
        - reload nginx

    - name: Reload nginx anyway
      service:
        name: nginx
        state: reloaded

    - name: Set up ssl virtual host for {{ property }} site
      template:
        src: "nginx-conf/nginx_site.conf.j2"
        dest: "{{ nginx.config_dir }}/sites-available/{{ property }}.{{ tld }}.conf"
      notify:
        - reload nginx
        
    - name: Set the sites-enabled symlink for {{ property }} site
      file:
        src: "{{ nginx.config_dir }}/sites-available/{{ property }}.{{ tld }}.conf"
        dest: "{{ nginx.config_dir }}/sites-enabled/{{ property }}.{{ tld }}.conf"
        state: link
      notify:
        - reload nginx

    - name: Deploy the generated hugo output files to {{ property }}
      synchronize:
        src: "../../output/hugo"
        dest: "/usr/share/nginx/{{ property }}"
        group: no
        owner: no
      tags:
        - copy-html

    - name: Generate the certificates if required
      script: scripts/create_cert.sh creates="{{ letsencrypt_live_path }}/{{ property }}.{{ tld }}/fullchain.pem"
        
    - name: "Make sure nginx is at least running"
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Deployed to debug
      debug:
        msg: "Deployed to {{ property }}.{{ tld }}"
      tags:
        - copy-html
        
  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded
        
